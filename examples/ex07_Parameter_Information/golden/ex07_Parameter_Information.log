
[MAIN] : Setting 'param_owner.mutable_string_param' value to 'Initialized within sc_main()'

	[MAIN] : Demonstrating 'comparison' between the values of a data type for different mutability types
	[MAIN] : 'mutable' & 'immutable' type String parameters - VALUES MATCH
	[MAIN] : 'mutable' & 'elaboration_time' type String - VALUES DO NOT MATCH

[MAIN] : parameter_container module declares two cci type parameters.

	One is of 'Integer type' and the other is of 'String type'

	'Integer type' has 'pre_read', 'pre/post_write' callback registered within the OBSERVER

Prior to 0 s	demonstrating 'is_initial_value' API

	[OWNER] : Parameter : param_owner.mutable_int_param	Value : 0
	Is initial value ?	false

Prior to 0 s	demonstrating 'get_default_value()'

	[OWNER -> Retrieve] : Parameter name  : param_owner.mutable_int_param

	[OWNER -> Retrieve] : Using 'get_default_value()' : 0

	[OWNER -> Set] : Param documentation - 'This is a mutable type integer parameter'

	[CFGR C_TOR] : Broker Type : DEFAULT_BROKER - is not a private broker.

Prior to 0 s	demonstrating 'is_initial_value' API

	[CFGR C_TOR] : param_owner.mutable_string_param	Initial Value : Initialized within sc_main
	[CFGR C_TOR] : Is initial value ?	true

	[CFGR C_TOR] : Set documentation to the string-type cci-parameter

	[OBSERVER C_TOR] : Broker Type : DEFAULT_BROKER- is not a private broker.

@ 0 s	demonstrating 'is_default_value()'

	[CFGR] : param_owner.mutable_int_param default value hasn't been modified.
	[CFGR] : Is Default Value ? 	Returned status : true
@ 1 ns

	[OWNER -> Set] : Overriding default value of param_owner.mutable_int_param to 1

	[OBSERVER pre_write_cb] :  Parameter Name : param_owner.mutable_int_param	Originator info : owning_param

	[OBSERVER post_write_cb] :  Parameter Name : param_owner.mutable_int_param	Originator info : owning_param

@ 2 ns	demonstrating 'is_default_value()'

	[CFGR] : param_owner.mutable_int_param value has been modified.
	[CFGR] : Is Default Value ? 	Returned status : false

	[CFGR] : param_owner.mutable_string_param value hasn't been modified

	[CFGR -> Retrieve] : Parameter name  : param_owner.mutable_string_param

	[CFGR -> Retrieve] : Parameter value : Initialized within sc_main

@ 4 ns	demonstrating 'is_invalid_value()'

	[CFGR] : Is Invalid Value ? 	Returned status : false
	[CFGR] : Valid parameter value

	[CFGR -> Retrieve] Parameter's name : param_owner.mutable_int_param

	[OBSERVER pre_read_cb] :  Parameter Name : param_owner.mutable_int_param	Originator info : param_cfgr

	[CFGR -> Retrieve] Parameter's value : 1

	[CFGR -> Retreive] Parameter's doc : This is a mutable type integer parameter

@ 6 ns

	[CFGR -> Set] :  param_owner.mutable_int_param value to 10

	[OBSERVER pre_write_cb] :  Parameter Name : param_owner.mutable_int_param	Originator info : param_cfgr

	[OBSERVER post_write_cb] :  Parameter Name : param_owner.mutable_int_param	Originator info : param_cfgr

@ 10 ns

	[CFGR -> Retrieve] : Parameter name : param_owner.mutable_int_param

	[OBSERVER pre_read_cb] :  Parameter Name : param_owner.mutable_int_param	Originator info : param_cfgr

	[CFGR -> Retrieve] : Parameter value: 10

	[CFGR -> Retrieve] : Parameter doc : This is a mutable type integer parameter

@ 12 ns

	[CFGR] : Checking locked status of parameter

	[CFGR] : param_owner.mutable_int_param is in unlocked state!!

	[CFGR] : Parameter locked using password

@ 14 ns

	[CFGR] : Checking locked status of parameter

	[CFGR] : param_owner.mutable_int_param is in locked state!!

	[CFGR] : Parameter unlocked using password

@ 16 ns

	[CFGR] : Checking locked status of parameter

	[CFGR] : param_owner.mutable_int_param is in unlocked state!!

@ 18 ns demonstrating 'set_value_invalid()'

	[OWNER -> Set] : param_owner.mutable_int_param value invalid.
	[OWNER] : Is Invalid Value ? 	Returned Status : true

	[OBSERVER pre_read_cb] :  Parameter Name : param_owner.mutable_int_param	Originator info : owning_param

	[OWNER -> Retrieve] : param_owner.mutable_int_param	Value : 10

@ 20 ns	demonstrating 'is_invalid_value()'

	[CFGR] : param_owner.mutable_int_param value is set to invalid.
	[CFGR] : Is Invalid Value ? true

@ 22 ns	demonstrating 'set_value()' for string-type param using cci_value

	[CFGR] : Parameter Documentation : This is a mutable type string parameter

	[CFGR -> Set] : Get Basic Type using 'get_basic_type()' : 4

@ 24 ns demonstrating 'get_latest_write_originator' API

	[CFGR] : Originator for the latest write on string type cci-parameter : param_cfgr

@ 24 ns demonstrating 'get_value' for string-type param using cci_value

	[CFGR] : 'Retrieve1' using 'json_serialize' and 'Retrieve2' using 'get_value()'

	[CFGR -> Retrieve1] : param_owner.mutable_string_param value is Hello_New_String

	[CFGR -> Retrieve2] : Hello_New_String

@ 26 ns	demonstrating setting values by OWNER using cci_value
	[OWNER -> Set] : New String Value : 'String_Value_Set_by_OWNER

@ 28 ns	demonstrating retrieving values by OWNER using cci_value
	[OWNER -> Retrieve] : Receive str_value using 'cci_value' : String_Value_Set_by_OWNER
