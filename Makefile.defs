## root of Git tree
ifdef CCI_HOME
GS_CCI_HOME = $(CCI_HOME)
else
GS_CCI_HOME?=/Users/schroede/mydev/cci_git/cci
endif

## set some directories 
CCI_INC_DIR = $(GS_CCI_HOME)/api
CCI_LIB_DIR = $(GS_CCI_HOME)/api

CCI_API_IMPLEMENTATION_INC_DIR   ?= $(GS_CCI_HOME)/gs_broker_implementation
CCI_API_IMPLEMENTATION_LIB_DIR   ?= $(GS_CCI_HOME)/gs_broker_implementation
CCI_PARAM_IMPLEMENTATION_INC_DIR ?= $(GS_CCI_HOME)/gs_param_implementation
CCI_PARAM_IMPLEMENTATION_LIB_DIR ?= $(GS_CCI_HOME)/gs_param_implementation

GS_CONTROL_DIR = $(GS_CCI_HOME)/greencontrol_cci_branch
GREENSTARCORE_DIR = $(GS_CCI_HOME)

ifdef BOOST_HOME
BOOST = $(BOOST_HOME)
endif
BOOST ?= /cad/tools/boost

ifdef SYSTEMC_HOME
SYSTEMC=$(SYSTEMC_HOME)
endif
SYSTEMC ?= /cad/tools/systemc

## Your compiler
CC  ?= gcc
CXX ?= g++

## target architecture (if not defined in Makefile)
ifndef TARGET_ARCH
 TARGET_ARCH = macosx
endif

ifdef SYSTEMC_LIB
 SYSTEMC_LIB_DIR = $(SYSTEMC_LIB)
endif
SYSTEMC_LIB_DIR ?= $(SYSTEMC)/lib-$(TARGET_ARCH)

DEFFLAGS = -DSC_INCLUDE_DYNAMIC_PROCESSES

LDFLAGS =

INCDIR = -I. -I$(CCI_INC_DIR) -I$(SYSTEMC)/include -I$(BOOST)

LIBDIR = -L. -L.. -L$(SYSTEMC_LIB_DIR) -L$(CCI_LIB_DIR) \
         -L$(CCI_API_IMPLEMENTATION_LIB_DIR) \
	 -L$(CCI_PARAM_IMPLEMENTATION_LIB_DIR) $(EXTRA_LIBS_DIRS)

LIBS   =  $(EXTRA_LIBS) -lsystemc -lm

EXE    = $(MODULE)

.SUFFIXES: .cc .cpp .o

$(EXE): $(OBJS_W_PATHS) $(SYSTEMC_LIB_DIR)/libsystemc.a 
	$(CXX) $(CFLAGS) $(DEFFLAGS) $(LDFLAGS) $(INCDIR) $(LIBDIR) -o $@ $(OBJS) $(LIBS) 2>&1 | c++filt

.cpp.o:
	$(CXX) $(CFLAGS) $(DEFFLAGS) $(INCDIR) -c $<

.cc.o:
	$(CXX) $(CFLAGS) $(DEFFLAGS) $(INCDIR) -c $<

run: $(EXE)
	./$(EXE) $(EXE_FLAGS)

clean:
	rm -f $(OBJS) *~ $(EXE) core

ultraclean: clean
	rm -f Makefile.deps
