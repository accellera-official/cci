We aim for consistency with other SystemC Standards. We follow Philipp's 
recommendations (from https://github.com/OSCI-WG/cci/pull/17) as a foundation:

- generally follow Google C++ style guide
- class naming: all lower-case, separated by underscores (i.e. no CamelCase)
- enum values use domain prefix (i.e. CCI_), all upper-case, separated by underscores
- nested typedefs with `_type`
- base classes ending with `_base` (or `_b`)

And we add the following incremental guidance:
- "cfg" is our abbreviation for configuration
- single namespace (cci::)
- "cci_" prefix for all class names
  Extend prefix (e.g. "cci_cfg") as needed to avoid conflict
  (refer to: https://github.com/OSCI-WG/cci/issues/44)
- Pattern for include guards: <src sub-dir><filename>_INCLUDED_
  (e.g. CCI_CNF_CCI_PARAM_IF_H_INCLUDED_)
- comply with relevant precedent for getters/setters, for examples:
    STL: size()/resize() for containers,
    SystemC/TLM: name()
  where no precedent, prefer explicit get_ and set_ prefixes.
  (refer to: https://github.com/OSCI-WG/cci/issues/42)
- Prefer sc_assert() over assert()
- use doxygen source code comments
  References come from:
    http://www.stack.nl/~dimitri/doxygen/manual/docblocks.html#docstructure
  where more detailed information can be found.

  Use the JavaDoc style:
  /**
   * ... text ...
   */

  Use the following format for single line briefs:
  /// Brief description.

  Use the following format for documentation after members:
  int var; ///< Brief description after the member

  Use '@' command tags vs. '\'

  General guideline: avoid styles that use '!'.

  Provide at least the following commands:
    file: @brief, @author
    class: @class, @brief 
    class methods: @brief, @param, @return, @exception
    sc_main function: @fn, @brief, @param, @return

  @copydoc should be used when overriding a parent class method (or similiar
  situation). The actual documentation should exist in the uppermost (or
  otherwise most prominent) class.

  Detailed descriptions are encouraged when warranted.
