name: cmake

on: [push, pull_request]

jobs:
  build:
    name: "Build"
    strategy:
      fail-fast: false
      matrix:
        systemc_version: [2.3.2, 2.3.3, 2.3.4, 3.0.0, 3.0.1]
        os:
          - name: ubuntu
            version: 22.04
            cxx_compiler: g++-11
            c_compiler: gcc-11
            generator: "Unix Makefiles"
          - name: ubuntu
            version: 22.04
            cxx_compiler: clang++-11
            c_compiler: clang-11
            generator: "Unix Makefiles"
            deps: 'clang-11'
          - name: ubuntu
            version: 24.04
            cxx_compiler: g++
            c_compiler: gcc
            generator: "Unix Makefiles"
          - name: ubuntu
            version: 24.04
            cxx_compiler: clang++
            c_compiler: clang
            generator: "Unix Makefiles"
          - name: macos
            version: 13
            cxx_compiler: g++
            c_compiler: gcc
            generator: "Unix Makefiles"
          - name: macos
            version: 13
            cxx_compiler: clang++
            c_compiler: clang
            generator: "Unix Makefiles"
          - name: windows
            version: 2022
            cxx_compiler: msvc
            c_compiler: msvc
            generator: "Visual Studio 17 2022"
          - name: windows
            version: 2022
            cxx_compiler: g++
            c_compiler: gcc
            generator: "Unix Makefiles"
          - name: windows
            version: 2022
            cxx_compiler: clang++
            c_compiler: clang
            generator: "Unix Makefiles"
        exclude:
          - systemc_version: 2.3.2
            os:
              name: windows
              generator: "Unix Makefiles"
          - systemc_version: 2.3.3
            os:
              name: windows
              generator: "Unix Makefiles"
          - systemc_version: 2.3.4
            os:
              name: windows
              generator: "Unix Makefiles"
          - systemc_version: 2.3.2
            os:
              name: macos
          - systemc_version: 2.3.3
            os:
              name: macos
          - systemc_version: 2.3.4
            os:
              name: macos

    env:
      SYSTEMC_HOME: "${{github.workspace}}/systemc/${{matrix.systemc_version}}"
      CCI_HOME: "${{github.workspace}}/build/release-sc_${{matrix.systemc_version}}"
      ESC: ${{matrix.os.name == 'windows' && '`' || '\'}}

    runs-on: ${{matrix.os.name}}-${{matrix.os.version}}

    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        submodules: 'recursive'

    - name: Setup Dependencies Ubuntu
      if: matrix.os.name == 'ubuntu' && matrix.os.deps != 0
      run: |
        sudo apt-get update -y -qq
        sudo apt-get install -y \
          ${{matrix.os.deps}}

    - name: Setup Dependencies Windows
      if: matrix.os.name == 'windows'
      run: |
        choco install wget ${{matrix.os.deps}}
        # add mingw to path to find clang
        echo "C:\msys64\mingw64\bin" | Out-File -FilePath ${env:GITHUB_PATH} -Append

    - name: Setup Dependencies Windows Clang
      if : matrix.os.name == 'windows' && matrix.os.c_compiler == 'clang'
      uses: msys2/setup-msys2@v2
      with:
        install: mingw-w64-x86_64-clang
        release: false

    - name: Cache SystemC ${{matrix.systemc_version}} (${{matrix.os.cxx_compiler}})
      id: cache-SystemC
      uses: actions/cache@v3
      with:
        path: ${{env.SYSTEMC_HOME}}
        key: ${{matrix.os.name}}-${{matrix.os.version}}-cmake-systemc-${{matrix.systemc_version}}-${{matrix.os.cxx_compiler}}

    - name: Setup SystemC
      if: steps.cache-SystemC.outputs.cache-hit != 'true'
      env:
        SYSTEMC_URL: "https://github.com/accellera-official/systemc/archive/refs/tags"
      run: |
        mkdir -p ${{env.SYSTEMC_HOME}}
        mkdir -p ${{github.workspace}}/tmp/systemc-${{matrix.systemc_version}}
        cd ${{github.workspace}}/tmp/systemc-${{matrix.systemc_version}}
        wget ${{env.SYSTEMC_URL}}/${{matrix.systemc_version}}.tar.gz
        tar -xvf ${{matrix.systemc_version}}.tar.gz
        cd systemc-${{matrix.systemc_version}}
        mkdir build
        cd build
        cmake ${{env.ESC}}
          -G "${{matrix.os.generator}}" ${{env.ESC}}
          -DCMAKE_CXX_COMPILER=${{matrix.os.cxx_compiler}} ${{env.ESC}}
          -DCMAKE_C_COMPILER=${{matrix.os.c_compiler}} ${{env.ESC}}
          -DCMAKE_CXX_STANDARD=${{startsWith(matrix.systemc_version, '2.') && '11' || '17'}} ${{env.ESC}}
          -DCMAKE_INSTALL_PREFIX=${{env.SYSTEMC_HOME}} ${{env.ESC}}
          -DCMAKE_BUILD_TYPE="Release" ${{env.ESC}}
          ..
        cmake --build . --config Release --parallel
        cmake --build . --config Release --target install

    - name: Configure
      run: |
        mkdir -p ${{env.CCI_HOME}}/build
        cd ${{env.CCI_HOME}}/build
        cmake ${{env.ESC}}
          -G "${{matrix.os.generator}}" ${{env.ESC}}
          -DSYSTEMCCCI_BUILD_TESTS=ON ${{env.ESC}}
          -DCMAKE_CXX_COMPILER=${{matrix.os.cxx_compiler}} ${{env.ESC}}
          -DCMAKE_C_COMPILER=${{matrix.os.c_compiler}} ${{env.ESC}}
          -DCMAKE_CXX_STANDARD=${{startsWith(matrix.systemc_version, '2.') && '11' || '17'}} ${{env.ESC}}
          -DCMAKE_PREFIX_PATH=${{env.SYSTEMC_HOME}}/lib/cmake/SystemCLanguage ${{env.ESC}}
          -DCMAKE_INSTALL_PREFIX=${{env.CCI_HOME}} ${{env.ESC}}
          -DCMAKE_BUILD_TYPE="Release" ${{env.ESC}}
          ../../..

    - name: Build
      working-directory: ${{env.CCI_HOME}}/build
      run: |
        cmake --build . --config Release --parallel
        cmake --install . --config Release

    - name: Test (Configuration)
      working-directory: ${{env.CCI_HOME}}/build
      if: matrix.os.name != 'windows' || matrix.os.c_compiler != 'gcc' # Tests segfault on Windows w/ MinGW GCC
      run: |
        cmake --build ./configuration/examples --config Release --target check --parallel

    - name: Test (mingw-gcc)
      if: matrix.os.name == 'windows' && matrix.os.c_compiler == 'gcc'
      run: |
        echo "::warning file=.github/workflows/cmake.yml,::Tests are disabled on ${{matrix.os.name}}-${{matrix.os.c_compiler}}"
