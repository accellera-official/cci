#------------------------------------------------------------------------------- 
# @file     Makefile.gs_cci
# @date     Sun Dec 12 20:10:03 IST 2010
# @desc     Make rules for building GreenSocs CCI reference lib implementation
#------------------------------------------------------------------------------- 
include Makefile.common

#BUILD_GS_CCI_ALL_LIB=yes

#-- override include dirs for library build
GS_CCI_INC=-I$(GS_CCI_HOME)/api \
           -I$(GS_CCI_HOME)/gs_param_implementation \
           -I$(GS_CCI_HOME)/greencontrol_cci_branch \
           -I$(GS_CCI_HOME)/gs_broker_implementation

#-- Temporary folder to store intermediate .o's for CCI library builds
USR=$(shell whoami)
OBJDIR=/tmp/$(USR)

#-- api/
GS_CCI_API_CNF_SRCS_WOPATH =cci_broker_manager.cpp \
                            cci_broker_stack.cpp \
                            cci_value.cpp
GS_CCI_API_CNF_SRCS_PATH   =$(GS_CCI_HOME)/api/cnf/
GS_CCI_API_CNF_SRCS        =$(addprefix $(GS_CCI_API_CNF_SRCS_PATH),$(GS_CCI_API_CNF_SRCS_WOPATH))
GS_CCI_API_CNF_OBJS_TMP    =$(addprefix $(OBJDIR)/,$(GS_CCI_API_CNF_SRCS_WOPATH))
GS_CCI_API_CNF_OBJS        =$(GS_CCI_API_CNF_OBJS_TMP:.cpp=.o)

GS_CCI_API_CORE_SRCS_WOPATH=
GS_CCI_API_CORE_SRCS_PATH  =$(GS_CCI_HOME)/api/core/
GS_CCI_API_CORE_SRCS       =$(addprefix $(GS_CCI_API_CORE_SRCS_PATH),$(GS_CCI_API_CORE_SRCS_WOPATH))
GS_CCI_API_CORE_OBJS_TMP   =$(addprefix $(OBJDIR)/,$(GS_CCI_API_CORE_SRCS_WOPATH))
GS_CCI_API_CORE_OBJS       =$(GS_CCI_API_CORE_OBJS_TMP:.cpp=.o)

#-- gs_broker_implementation/
GS_CCI_BROKER_SRCS_WOPATH =gs_cci_broker.cpp \
                           gs_cci_cnf_broker.cpp  \
                           gs_cci_cnf_broker_accessor.cpp \
                           gs_cci_cnf_broker_accessor_handler.cpp \
                           gs_cci_cnf_private_broker.cpp \
                           gs_cci_cnf_private_broker_accessor.cpp \
                           helpers.cpp
GS_CCI_BROKER_SRCS_PATH   =$(GS_CCI_HOME)/gs_broker_implementation/
GS_CCI_BROKER_SRCS        =$(addprefix $(GS_CCI_BROKER_SRCS_PATH),$(GS_CCI_BROKER_SRCS_WOPATH))
GS_CCI_BROKER_OBJS_TMP    =$(addprefix $(OBJDIR)/,$(GS_CCI_BROKER_SRCS_WOPATH))
GS_CCI_BROKER_OBJS        =$(GS_CCI_BROKER_OBJS_TMP:.cpp=.o)

#-- gs_param_implementation/
GS_CCI_PARAM_SRCS_WOPATH  =gs_cci_symbols_templ_small_int.cpp \
                           gs_cci_symbols.cpp
GS_CCI_PARAM_SRCS_PATH    =$(GS_CCI_HOME)/gs_param_implementation/
GS_CCI_PARAM_SRCS         =$(addprefix $(GS_CCI_PARAM_SRCS_PATH),$(GS_CCI_PARAM_SRCS_WOPATH))
GS_CCI_PARAM_OBJS_TMP     =$(addprefix $(OBJDIR)/,$(GS_CCI_PARAM_SRCS_WOPATH))
GS_CCI_PARAM_OBJS         =$(GS_CCI_PARAM_OBJS_TMP:.cpp=.o)

GS_CCI_JSON_SRCS_WOPATH   =json_spirit_reader.cpp \
                           json_spirit_writer.cpp
GS_CCI_JSON_SRCS_PATH     =$(GS_CCI_HOME)/gs_param_implementation/json_spirit/
GS_CCI_JSON_SRCS          =$(addprefix $(GS_CCI_JSON_SRCS_PATH),$(GS_CCI_JSON_SRCS_WOPATH))
GS_CCI_JSON_OBJS_TMP      =$(addprefix $(OBJDIR)/,$(GS_CCI_JSON_SRCS_WOPATH))
GS_CCI_JSON_OBJS          =$(GS_CCI_JSON_OBJS_TMP:.cpp=.o)

#-- Consolidated sources to package for GS CCI implementation
GS_CCI_SRCS=$(GS_CCI_API_CNF_SRCS) \
            $(GS_CCI_API_CORE_SRCS) \
            $(GS_CCI_BROKER_SRCS) \
            $(GS_CCI_JSON_SRCS) \
            $(GS_CCI_PARAM_SRCS)
GS_CCI_OBJS=$(GS_CCI_API_CNF_OBJS) \
            $(GS_CCI_API_CORE_OBJS) \
            $(GS_CCI_BROKER_OBJS) \
            $(GS_CCI_JSON_OBJS) \
            $(GS_CCI_PARAM_OBJS)

#GS_CCI_CFLAGS=-DCCI_SYMBOLS_LOWER_BOUND=1 -DCCI_SYMBOLS_UPPER_BOUND=10

#-- Build Rules for CCI Component libs
$(OBJDIR)/%.o : $(GS_CCI_API_CNF_SRCS_PATH)%.cpp
	$(CXX) $(CXXFLAGS) $(INCS) -c $< -o $@

$(OBJDIR)/%.o : $(GS_CCI_API_CORE_SRCS_PATH)%.cpp
	$(CXX) $(CXXFLAGS) $(INCS) -c $< -o $@

$(OBJDIR)/%.o : $(GS_CCI_BROKER_SRCS_PATH)%.cpp
	$(CXX) $(CXXFLAGS) $(INCS) -c $< -o $@

$(OBJDIR)/%.o : $(GS_CCI_PARAM_SRCS_PATH)%.cpp
	$(CXX) $(CXXFLAGS) $(INCS) -c $< -o $@

$(OBJDIR)/%.o : $(GS_CCI_JSON_SRCS_PATH)%.cpp
	$(CXX) $(CXXFLAGS) $(INCS) -c $< -o $@

all: $(GS_CCI_BROKER_LIB) $(GS_CCI_API_LIB) $(GS_CCI_PARAM_LIB) $(GS_CCI_ALL_LIB)

$(OBJDIR): 
	mkdir -p $(OBJDIR)

$(GS_CCI_API_LIB):  $(OBJDIR) $(GS_CCI_API_CNF_OBJS) $(GS_CCI_API_CORE_OBJS)
	mkdir -p $(@D)
	$(AR) $(ARFLAGS) $(GS_CCI_API_LIB) \
		$(GS_CCI_API_CNF_OBJS) \
		$(GS_CCI_API_CORE_OBJS)
	ranlib $@

$(GS_CCI_BROKER_LIB):  $(OBJDIR) $(GS_CCI_BROKER_OBJS)
	mkdir -p $(@D)
	$(AR) $(ARFLAGS) $(GS_CCI_BROKER_LIB) \
		$(GS_CCI_BROKER_OBJS)
	ranlib $@

$(GS_CCI_PARAM_LIB): $(OBJDIR) $(GS_CCI_PARAM_OBJS) $(GS_CCI_JSON_OBJS)
	mkdir -p $(@D)
	$(AR) $(ARFLAGS) $(GS_CCI_PARAM_LIB) \
		$(GS_CCI_PARAM_OBJS) $(GS_CCI_JSON_OBJS)
	ranlib $@

ifneq (,$(BUILD_GS_CCI_ALL_LIB))
$(GS_CCI_ALL_LIB): $(OBJDIR) $(GS_CCI_API_CNF_OBJS) $(GS_CCI_API_CORE_OBJS) $(GS_CCI_BROKER_OBJS) $(GS_CCI_PARAM_OBJS) $(GS_CCI_JSON_OBJS)
	$(AR) $(ARFLAGS) $(GS_CCI_ALL_LIB) \
		$(GS_CCI_API_CNF_OBJS) $(GS_CCI_API_CORE_OBJS) \
		$(GS_CCI_BROKER_OBJS)  $(GS_CCI_PARAM_OBJS) $(GS_CCI_JSON_OBJS)
	ranlib $@
endif

Makefile.gs_deps:
	$(CXX) $(CXXFLAGS) $(INCS) -M $(GS_CCI_SRCS) >> $@

clean:
	@rm -vf $(GS_CCI_OBJS)
	
cleanbuild: clean all

cleanall: clean
	@rm -vf $(GS_CCI) $(GS_CCI_ALL_LIB) $(GS_CCI_API_LIB) \
		$(GS_CCI_PARAM_LIB) $(GS_CCI_BROKER_LIB) \
		Makefile.gs_deps 

-include Makefile.gs_deps

