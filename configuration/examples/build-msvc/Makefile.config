# MSVC WINDOWS build:

MAKE = nmake /NOLOGO

#helper program for regular expression filtering
SED = $(CCI_HOME)\examples\build-msvc\ssed

# set, if you want to build the MSVC project files with MSBUILD
#MSBUILD = MSBUILD.exe
MSBUILDFLAGS = /nologo

# use INCLUDE, LIBS, LIBPATH, PATH from environment
#MSBUILDFLAGS = $(MSBUILDFLAGS) /useenv

# Project file extension
# (changed to .vcxproj in recent versions of VC++)
PROJEXT=.vcxproj

# use CONFIG=Both, to build Debug and Release together
CONFIG=Debug

# Win32 and x64 are configured in the projects
#PLATFORM=Win32

# set, to ink against SystemC DLL (in command-line mode)
#DLL=DLL

# underlying command-line tools
CXX = CL.exe   /nologo
LD  = LINK.exe /nologo

CXXFLAGS=$(CXXFLAGS_COMMON) $(CXXFLAGS_WARN) \
         $(CXXFLAGS_DEFINES) $(CXXFLAGS_INCLUDE)

CXXFLAGS_COMMON=/GR /vmg /EHsc /Zm800
CXXFLAGS_WARN=/W4 /wd4100 /wd4121 /wd4127 /wd4267 /wd4996

# TODO: more strict test (warning->error)
# CXXFLAGS_WARN=/W4 /WX /wd4100 /wd4121 /wd4127 /wd4267 /wd4996

CXXFLAGS_DEFINES=/D_CONSOLE

# defaults to environment variables if found
SYSTEMC_INC_DIR=$(SYSTEMC_HOME)\src
SYSTEMC_LIB_DIR=$(SYSTEMC_HOME)\$(SYSTEMC_MSVC)\SystemC\$(OUTDIR)$(DLL)

CCI_INC_DIR=$(CCI_HOME)\src
CCI_LIB_DIR=$(CCI_HOME)\$(CCI_MSVC)\cci\$(OUTDIR)$(DLL)
CCI_EXAMPLE_INC_DIR=$(CCI_HOME)\examples\cci\common\inc

CXXFLAGS_INCLUDE=\
  /I..\include \
  /I..\..\common\include \
  /I..\..\common\src \
  /I$(SYSTEMC_INC_DIR) \
  /I$(CCI_INC_DIR) \
  /I$(CCI_EXAMPLE_INC_DIR) \
  /I$(RAPIDJSON_HOME)

LDFLAGS =/SUBSYSTEM:CONSOLE /LIBPATH:$(SYSTEMC_LIB_DIR) /LIBPATH:$(CCI_LIB_DIR)

CXXFLAGS_RELEASE=/O2 /DNDEBUG
LDFLAGS_RELEASE=

CXXFLAGS_DEBUG=/D_DEBUG /Zi /Fd"$(OUTDIR)/$(PROJECT).pdb"
LDFLAGS_DEBUG =/DEBUG /PDB:"$(OUTDIR)/$(PROJECT).pdb"

SRCDIR      =.
SRCDIRCOMMON=..\common\inc
